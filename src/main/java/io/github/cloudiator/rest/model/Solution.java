/*
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.NodeCandidate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * A valid solution to a matchmaking problem.
 */
@ApiModel(description = "A valid solution to a matchmaking problem.")

public class Solution implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("id")
  private String id = null;

  @SerializedName("costs")
  private Double costs = null;

  @SerializedName("time")
  private Float time = null;

  @SerializedName("isOptimal")
  private Boolean isOptimal = null;

  @SerializedName("valid")
  private Boolean valid = null;

  @SerializedName("nodeCandidates")
  private List<NodeCandidate> nodeCandidates = null;

  public Solution id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Solution costs(Double costs) {
    this.costs = costs;
    return this;
  }

   /**
   * Get costs
   * @return costs
  **/
  @ApiModelProperty(value = "")
  public Double getCosts() {
    return costs;
  }

  public void setCosts(Double costs) {
    this.costs = costs;
  }

  public Solution time(Float time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public Float getTime() {
    return time;
  }

  public void setTime(Float time) {
    this.time = time;
  }

  public Solution isOptimal(Boolean isOptimal) {
    this.isOptimal = isOptimal;
    return this;
  }

   /**
   * Get isOptimal
   * @return isOptimal
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsOptimal() {
    return isOptimal;
  }

  public void setIsOptimal(Boolean isOptimal) {
    this.isOptimal = isOptimal;
  }

  public Solution valid(Boolean valid) {
    this.valid = valid;
    return this;
  }

   /**
   * Get valid
   * @return valid
  **/
  @ApiModelProperty(value = "")
  public Boolean isValid() {
    return valid;
  }

  public void setValid(Boolean valid) {
    this.valid = valid;
  }

  public Solution nodeCandidates(List<NodeCandidate> nodeCandidates) {
    this.nodeCandidates = nodeCandidates;
    return this;
  }

  public Solution addNodeCandidatesItem(NodeCandidate nodeCandidatesItem) {
    if (this.nodeCandidates == null) {
      this.nodeCandidates = new ArrayList<NodeCandidate>();
    }
    this.nodeCandidates.add(nodeCandidatesItem);
    return this;
  }

   /**
   * Get nodeCandidates
   * @return nodeCandidates
  **/
  @ApiModelProperty(value = "")
  public List<NodeCandidate> getNodeCandidates() {
    return nodeCandidates;
  }

  public void setNodeCandidates(List<NodeCandidate> nodeCandidates) {
    this.nodeCandidates = nodeCandidates;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Solution solution = (Solution) o;
    return Objects.equals(this.id, solution.id) &&
        Objects.equals(this.costs, solution.costs) &&
        Objects.equals(this.time, solution.time) &&
        Objects.equals(this.isOptimal, solution.isOptimal) &&
        Objects.equals(this.valid, solution.valid) &&
        Objects.equals(this.nodeCandidates, solution.nodeCandidates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, costs, time, isOptimal, valid, nodeCandidates);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Solution {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    isOptimal: ").append(toIndentedString(isOptimal)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    nodeCandidates: ").append(toIndentedString(nodeCandidates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

