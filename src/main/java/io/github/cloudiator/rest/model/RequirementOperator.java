/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Part of AttributeRequirement
 */
@JsonAdapter(RequirementOperator.Adapter.class)
public enum RequirementOperator {
  
  EQ("EQ"),
  
  LEQ("LEQ"),
  
  GEQ("GEQ"),
  
  GT("GT"),
  
  LT("LT"),
  
  NEQ("NEQ"),
  
  IN("IN");

  private String value;

  RequirementOperator(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static RequirementOperator fromValue(String value) {
    for (RequirementOperator b : RequirementOperator.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<RequirementOperator> {
    @Override
    public void write(final JsonWriter jsonWriter, final RequirementOperator enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public RequirementOperator read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return RequirementOperator.fromValue(value);
    }
  }
}

