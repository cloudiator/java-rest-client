/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.Trigger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

/**
 * FaasInterfaceAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-13T10:47:33.672+01:00[Europe/Berlin]")
public class FaasInterfaceAllOf implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_FUNCTION_NAME = "functionName";
  @SerializedName(SERIALIZED_NAME_FUNCTION_NAME)
  private String functionName;

  public static final String SERIALIZED_NAME_SOURCE_CODE_URL = "sourceCodeUrl";
  @SerializedName(SERIALIZED_NAME_SOURCE_CODE_URL)
  private String sourceCodeUrl;

  public static final String SERIALIZED_NAME_HANDLER = "handler";
  @SerializedName(SERIALIZED_NAME_HANDLER)
  private String handler;

  public static final String SERIALIZED_NAME_TRIGGERS = "triggers";
  @SerializedName(SERIALIZED_NAME_TRIGGERS)
  private List<Trigger> triggers = null;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Integer timeout = 6;

  public static final String SERIALIZED_NAME_FUNCTION_ENVIRONMENT = "functionEnvironment";
  @SerializedName(SERIALIZED_NAME_FUNCTION_ENVIRONMENT)
  private Map<String, String> functionEnvironment = null;


  public FaasInterfaceAllOf functionName(String functionName) {
    
    this.functionName = functionName;
    return this;
  }

   /**
   * Unique name of the function. 
   * @return functionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique name of the function. ")

  public String getFunctionName() {
    return functionName;
  }


  public void setFunctionName(String functionName) {
    this.functionName = functionName;
  }


  public FaasInterfaceAllOf sourceCodeUrl(String sourceCodeUrl) {
    
    this.sourceCodeUrl = sourceCodeUrl;
    return this;
  }

   /**
   * URL path to ZIP artifact. 
   * @return sourceCodeUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL path to ZIP artifact. ")

  public String getSourceCodeUrl() {
    return sourceCodeUrl;
  }


  public void setSourceCodeUrl(String sourceCodeUrl) {
    this.sourceCodeUrl = sourceCodeUrl;
  }


  public FaasInterfaceAllOf handler(String handler) {
    
    this.handler = handler;
    return this;
  }

   /**
   * function in the code to be invoked. 
   * @return handler
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "function in the code to be invoked. ")

  public String getHandler() {
    return handler;
  }


  public void setHandler(String handler) {
    this.handler = handler;
  }


  public FaasInterfaceAllOf triggers(List<Trigger> triggers) {
    
    this.triggers = triggers;
    return this;
  }

  public FaasInterfaceAllOf addTriggersItem(Trigger triggersItem) {
    if (this.triggers == null) {
      this.triggers = new ArrayList<Trigger>();
    }
    this.triggers.add(triggersItem);
    return this;
  }

   /**
   * Events on which function will be invoked. 
   * @return triggers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Events on which function will be invoked. ")

  public List<Trigger> getTriggers() {
    return triggers;
  }


  public void setTriggers(List<Trigger> triggers) {
    this.triggers = triggers;
  }


  public FaasInterfaceAllOf timeout(Integer timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * Allowed time in seconds for function to finish its task. 
   * minimum: 1
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allowed time in seconds for function to finish its task. ")

  public Integer getTimeout() {
    return timeout;
  }


  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public FaasInterfaceAllOf functionEnvironment(Map<String, String> functionEnvironment) {
    
    this.functionEnvironment = functionEnvironment;
    return this;
  }

  public FaasInterfaceAllOf putFunctionEnvironmentItem(String key, String functionEnvironmentItem) {
    if (this.functionEnvironment == null) {
      this.functionEnvironment = new HashMap<String, String>();
    }
    this.functionEnvironment.put(key, functionEnvironmentItem);
    return this;
  }

   /**
   * A key - value type of Map using &lt;String, String&gt;. 
   * @return functionEnvironment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A key - value type of Map using <String, String>. ")

  public Map<String, String> getFunctionEnvironment() {
    return functionEnvironment;
  }


  public void setFunctionEnvironment(Map<String, String> functionEnvironment) {
    this.functionEnvironment = functionEnvironment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FaasInterfaceAllOf faasInterfaceAllOf = (FaasInterfaceAllOf) o;
    return Objects.equals(this.functionName, faasInterfaceAllOf.functionName) &&
        Objects.equals(this.sourceCodeUrl, faasInterfaceAllOf.sourceCodeUrl) &&
        Objects.equals(this.handler, faasInterfaceAllOf.handler) &&
        Objects.equals(this.triggers, faasInterfaceAllOf.triggers) &&
        Objects.equals(this.timeout, faasInterfaceAllOf.timeout) &&
        Objects.equals(this.functionEnvironment, faasInterfaceAllOf.functionEnvironment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(functionName, sourceCodeUrl, handler, triggers, timeout, functionEnvironment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FaasInterfaceAllOf {\n");
    sb.append("    functionName: ").append(toIndentedString(functionName)).append("\n");
    sb.append("    sourceCodeUrl: ").append(toIndentedString(sourceCodeUrl)).append("\n");
    sb.append("    handler: ").append(toIndentedString(handler)).append("\n");
    sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    functionEnvironment: ").append(toIndentedString(functionEnvironment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

