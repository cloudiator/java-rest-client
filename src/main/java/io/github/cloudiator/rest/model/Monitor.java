/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.DataSink;
import io.github.cloudiator.rest.model.MonitoringTarget;
import io.github.cloudiator.rest.model.Sensor;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

/**
 * Monitor
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-10T15:38:08.423+01:00[Europe/Berlin]")
public class Monitor implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_METRIC = "metric";
  @SerializedName(SERIALIZED_NAME_METRIC)
  private String metric;

  public static final String SERIALIZED_NAME_TARGETS = "targets";
  @SerializedName(SERIALIZED_NAME_TARGETS)
  private List<MonitoringTarget> targets = null;

  public static final String SERIALIZED_NAME_SENSOR = "sensor";
  @SerializedName(SERIALIZED_NAME_SENSOR)
  private Sensor sensor;

  public static final String SERIALIZED_NAME_SINKS = "sinks";
  @SerializedName(SERIALIZED_NAME_SINKS)
  private List<DataSink> sinks = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = null;


  public Monitor metric(String metric) {
    
    this.metric = metric;
    return this;
  }

   /**
   * Name of the collected metric
   * @return metric
  **/
  @ApiModelProperty(required = true, value = "Name of the collected metric")

  public String getMetric() {
    return metric;
  }


  public void setMetric(String metric) {
    this.metric = metric;
  }


  public Monitor targets(List<MonitoringTarget> targets) {
    
    this.targets = targets;
    return this;
  }

  public Monitor addTargetsItem(MonitoringTarget targetsItem) {
    if (this.targets == null) {
      this.targets = new ArrayList<MonitoringTarget>();
    }
    this.targets.add(targetsItem);
    return this;
  }

   /**
   * Get targets
   * @return targets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MonitoringTarget> getTargets() {
    return targets;
  }


  public void setTargets(List<MonitoringTarget> targets) {
    this.targets = targets;
  }


  public Monitor sensor(Sensor sensor) {
    
    this.sensor = sensor;
    return this;
  }

   /**
   * Get sensor
   * @return sensor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Sensor getSensor() {
    return sensor;
  }


  public void setSensor(Sensor sensor) {
    this.sensor = sensor;
  }


  public Monitor sinks(List<DataSink> sinks) {
    
    this.sinks = sinks;
    return this;
  }

  public Monitor addSinksItem(DataSink sinksItem) {
    if (this.sinks == null) {
      this.sinks = new ArrayList<DataSink>();
    }
    this.sinks.add(sinksItem);
    return this;
  }

   /**
   * Get sinks
   * @return sinks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DataSink> getSinks() {
    return sinks;
  }


  public void setSinks(List<DataSink> sinks) {
    this.sinks = sinks;
  }


  public Monitor tags(Map<String, String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Monitor putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * A key - value type of Map using &lt;String, String&gt;. 
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A key - value type of Map using <String, String>. ")

  public Map<String, String> getTags() {
    return tags;
  }


  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Monitor monitor = (Monitor) o;
    return Objects.equals(this.metric, monitor.metric) &&
        Objects.equals(this.targets, monitor.targets) &&
        Objects.equals(this.sensor, monitor.sensor) &&
        Objects.equals(this.sinks, monitor.sinks) &&
        Objects.equals(this.tags, monitor.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metric, targets, sensor, sinks, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Monitor {\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    sensor: ").append(toIndentedString(sensor)).append("\n");
    sb.append("    sinks: ").append(toIndentedString(sinks)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

