/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Credentials for remote access to the virtual machine. Typically, one of password or privateKey is set. 
 */
@ApiModel(description = "Credentials for remote access to the virtual machine. Typically, one of password or privateKey is set. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-13T10:47:33.672+01:00[Europe/Berlin]")
public class LoginCredential implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PRIVATE_KEY = "privateKey";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY)
  private String privateKey;


  public LoginCredential username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * The username for login
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The username for login")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public LoginCredential password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * The password for login
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The password for login")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public LoginCredential privateKey(String privateKey) {
    
    this.privateKey = privateKey;
    return this;
  }

   /**
   * The private key for login
   * @return privateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The private key for login")

  public String getPrivateKey() {
    return privateKey;
  }


  public void setPrivateKey(String privateKey) {
    this.privateKey = privateKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoginCredential loginCredential = (LoginCredential) o;
    return Objects.equals(this.username, loginCredential.username) &&
        Objects.equals(this.password, loginCredential.password) &&
        Objects.equals(this.privateKey, loginCredential.privateKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, password, privateKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoginCredential {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

