/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.Behaviour;
import io.github.cloudiator.rest.model.Interval;
import io.github.cloudiator.rest.model.PeriodicBehaviourAllOf;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Subtype of Behaviour Represents a periodic runtime behaviour 
 */
@ApiModel(description = "Subtype of Behaviour Represents a periodic runtime behaviour ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-26T14:14:48.729+01:00[Europe/Berlin]")
public class PeriodicBehaviour extends Behaviour implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private Interval interval;

  /**
   * Gets or Sets collisionHandling
   */
  @JsonAdapter(CollisionHandlingEnum.Adapter.class)
  public enum CollisionHandlingEnum {
    CANCEL("CANCEL"),
    
    PARALLEL("PARALLEL"),
    
    SKIP("SKIP");

    private String value;

    CollisionHandlingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CollisionHandlingEnum fromValue(String value) {
      for (CollisionHandlingEnum b : CollisionHandlingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CollisionHandlingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CollisionHandlingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CollisionHandlingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CollisionHandlingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_COLLISION_HANDLING = "collisionHandling";
  @SerializedName(SERIALIZED_NAME_COLLISION_HANDLING)
  private CollisionHandlingEnum collisionHandling;


  public PeriodicBehaviour interval(Interval interval) {
    
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * @return interval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Interval getInterval() {
    return interval;
  }


  public void setInterval(Interval interval) {
    this.interval = interval;
  }


  public PeriodicBehaviour collisionHandling(CollisionHandlingEnum collisionHandling) {
    
    this.collisionHandling = collisionHandling;
    return this;
  }

   /**
   * Get collisionHandling
   * @return collisionHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CollisionHandlingEnum getCollisionHandling() {
    return collisionHandling;
  }


  public void setCollisionHandling(CollisionHandlingEnum collisionHandling) {
    this.collisionHandling = collisionHandling;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeriodicBehaviour periodicBehaviour = (PeriodicBehaviour) o;
    return Objects.equals(this.interval, periodicBehaviour.interval) &&
        Objects.equals(this.collisionHandling, periodicBehaviour.collisionHandling) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(interval, collisionHandling, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeriodicBehaviour {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    collisionHandling: ").append(toIndentedString(collisionHandling)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

