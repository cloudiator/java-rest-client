/*
 * Cloudiator REST Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.Optimization;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Refers to the attribute that should be optimized
 */
@ApiModel(description = "Refers to the attribute that should be optimized")

public class AttributeOptimization extends Optimization implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("objectiveClass")
  private String objectiveClass = null;

  @SerializedName("objectiveAttribute")
  private String objectiveAttribute = null;

  /**
   * Gets or Sets aggregation
   */
  @JsonAdapter(AggregationEnum.Adapter.class)
  public enum AggregationEnum {
    SUM("SUM"),
    
    AVG("AVG");

    private String value;

    AggregationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AggregationEnum fromValue(String text) {
      for (AggregationEnum b : AggregationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AggregationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AggregationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AggregationEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AggregationEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("aggregation")
  private AggregationEnum aggregation = null;

  public AttributeOptimization objectiveClass(String objectiveClass) {
    this.objectiveClass = objectiveClass;
    return this;
  }

   /**
   * Get objectiveClass
   * @return objectiveClass
  **/
  @ApiModelProperty(value = "")
  public String getObjectiveClass() {
    return objectiveClass;
  }

  public void setObjectiveClass(String objectiveClass) {
    this.objectiveClass = objectiveClass;
  }

  public AttributeOptimization objectiveAttribute(String objectiveAttribute) {
    this.objectiveAttribute = objectiveAttribute;
    return this;
  }

   /**
   * Get objectiveAttribute
   * @return objectiveAttribute
  **/
  @ApiModelProperty(value = "")
  public String getObjectiveAttribute() {
    return objectiveAttribute;
  }

  public void setObjectiveAttribute(String objectiveAttribute) {
    this.objectiveAttribute = objectiveAttribute;
  }

  public AttributeOptimization aggregation(AggregationEnum aggregation) {
    this.aggregation = aggregation;
    return this;
  }

   /**
   * Get aggregation
   * @return aggregation
  **/
  @ApiModelProperty(value = "")
  public AggregationEnum getAggregation() {
    return aggregation;
  }

  public void setAggregation(AggregationEnum aggregation) {
    this.aggregation = aggregation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttributeOptimization attributeOptimization = (AttributeOptimization) o;
    return Objects.equals(this.objectiveClass, attributeOptimization.objectiveClass) &&
        Objects.equals(this.objectiveAttribute, attributeOptimization.objectiveAttribute) &&
        Objects.equals(this.aggregation, attributeOptimization.aggregation) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectiveClass, objectiveAttribute, aggregation, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttributeOptimization {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    objectiveClass: ").append(toIndentedString(objectiveClass)).append("\n");
    sb.append("    objectiveAttribute: ").append(toIndentedString(objectiveAttribute)).append("\n");
    sb.append("    aggregation: ").append(toIndentedString(aggregation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

