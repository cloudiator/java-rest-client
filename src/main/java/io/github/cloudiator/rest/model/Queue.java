/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.QueueStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import java.io.Serializable;

/**
 * Represents a queued task within the system. Used to execute long running requests. 
 */
@ApiModel(description = "Represents a queued task within the system. Used to execute long running requests. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-11-26T14:14:48.729+01:00[Europe/Berlin]")
public class Queue implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private QueueStatus status;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private OffsetDateTime start;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private OffsetDateTime end;

  public static final String SERIALIZED_NAME_DIAGNOSIS = "diagnosis";
  @SerializedName(SERIALIZED_NAME_DIAGNOSIS)
  private String diagnosis;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_TASK_ID = "taskId";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private String taskId;


  public Queue id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the queued task
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the queued task")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Queue status(QueueStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public QueueStatus getStatus() {
    return status;
  }


  public void setStatus(QueueStatus status) {
    this.status = status;
  }


  public Queue start(OffsetDateTime start) {
    
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStart() {
    return start;
  }


  public void setStart(OffsetDateTime start) {
    this.start = start;
  }


  public Queue end(OffsetDateTime end) {
    
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEnd() {
    return end;
  }


  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }


  public Queue diagnosis(String diagnosis) {
    
    this.diagnosis = diagnosis;
    return this;
  }

   /**
   * Gives human-readable feedback
   * @return diagnosis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gives human-readable feedback")

  public String getDiagnosis() {
    return diagnosis;
  }


  public void setDiagnosis(String diagnosis) {
    this.diagnosis = diagnosis;
  }


  public Queue location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Location of the original entity
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location of the original entity")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public Queue taskId(String taskId) {
    
    this.taskId = taskId;
    return this;
  }

   /**
   * Id of the original entity
   * @return taskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of the original entity")

  public String getTaskId() {
    return taskId;
  }


  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Queue queue = (Queue) o;
    return Objects.equals(this.id, queue.id) &&
        Objects.equals(this.status, queue.status) &&
        Objects.equals(this.start, queue.start) &&
        Objects.equals(this.end, queue.end) &&
        Objects.equals(this.diagnosis, queue.diagnosis) &&
        Objects.equals(this.location, queue.location) &&
        Objects.equals(this.taskId, queue.taskId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, start, end, diagnosis, location, taskId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Queue {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    diagnosis: ").append(toIndentedString(diagnosis)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

