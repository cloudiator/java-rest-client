/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.Behaviour;
import io.github.cloudiator.rest.model.Optimization;
import io.github.cloudiator.rest.model.Port;
import io.github.cloudiator.rest.model.Requirement;
import io.github.cloudiator.rest.model.TaskInterface;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Represents a new task of a job. 
 */
@ApiModel(description = "Represents a new task of a job. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-13T10:47:33.672+01:00[Europe/Berlin]")
public class Task implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PORTS = "ports";
  @SerializedName(SERIALIZED_NAME_PORTS)
  private List<Port> ports = null;

  public static final String SERIALIZED_NAME_INTERFACES = "interfaces";
  @SerializedName(SERIALIZED_NAME_INTERFACES)
  private List<TaskInterface> interfaces = null;

  public static final String SERIALIZED_NAME_OPTIMIZATION = "optimization";
  @SerializedName(SERIALIZED_NAME_OPTIMIZATION)
  private Optimization optimization;

  public static final String SERIALIZED_NAME_REQUIREMENTS = "requirements";
  @SerializedName(SERIALIZED_NAME_REQUIREMENTS)
  private List<Requirement> requirements = null;

  public static final String SERIALIZED_NAME_BEHAVIOUR = "behaviour";
  @SerializedName(SERIALIZED_NAME_BEHAVIOUR)
  private Behaviour behaviour;


  public Task name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Human-readable name. Uniquely identifies a task.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Human-readable name. Uniquely identifies a task.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Task ports(List<Port> ports) {
    
    this.ports = ports;
    return this;
  }

  public Task addPortsItem(Port portsItem) {
    if (this.ports == null) {
      this.ports = new ArrayList<Port>();
    }
    this.ports.add(portsItem);
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Port> getPorts() {
    return ports;
  }


  public void setPorts(List<Port> ports) {
    this.ports = ports;
  }


  public Task interfaces(List<TaskInterface> interfaces) {
    
    this.interfaces = interfaces;
    return this;
  }

  public Task addInterfacesItem(TaskInterface interfacesItem) {
    if (this.interfaces == null) {
      this.interfaces = new ArrayList<TaskInterface>();
    }
    this.interfaces.add(interfacesItem);
    return this;
  }

   /**
   * Interfaces of this task
   * @return interfaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Interfaces of this task")

  public List<TaskInterface> getInterfaces() {
    return interfaces;
  }


  public void setInterfaces(List<TaskInterface> interfaces) {
    this.interfaces = interfaces;
  }


  public Task optimization(Optimization optimization) {
    
    this.optimization = optimization;
    return this;
  }

   /**
   * Get optimization
   * @return optimization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Optimization getOptimization() {
    return optimization;
  }


  public void setOptimization(Optimization optimization) {
    this.optimization = optimization;
  }


  public Task requirements(List<Requirement> requirements) {
    
    this.requirements = requirements;
    return this;
  }

  public Task addRequirementsItem(Requirement requirementsItem) {
    if (this.requirements == null) {
      this.requirements = new ArrayList<Requirement>();
    }
    this.requirements.add(requirementsItem);
    return this;
  }

   /**
   * Get requirements
   * @return requirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Requirement> getRequirements() {
    return requirements;
  }


  public void setRequirements(List<Requirement> requirements) {
    this.requirements = requirements;
  }


  public Task behaviour(Behaviour behaviour) {
    
    this.behaviour = behaviour;
    return this;
  }

   /**
   * Get behaviour
   * @return behaviour
  **/
  @ApiModelProperty(required = true, value = "")

  public Behaviour getBehaviour() {
    return behaviour;
  }


  public void setBehaviour(Behaviour behaviour) {
    this.behaviour = behaviour;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Task task = (Task) o;
    return Objects.equals(this.name, task.name) &&
        Objects.equals(this.ports, task.ports) &&
        Objects.equals(this.interfaces, task.interfaces) &&
        Objects.equals(this.optimization, task.optimization) &&
        Objects.equals(this.requirements, task.requirements) &&
        Objects.equals(this.behaviour, task.behaviour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ports, interfaces, optimization, requirements, behaviour);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Task {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    interfaces: ").append(toIndentedString(interfaces)).append("\n");
    sb.append("    optimization: ").append(toIndentedString(optimization)).append("\n");
    sb.append("    requirements: ").append(toIndentedString(requirements)).append("\n");
    sb.append("    behaviour: ").append(toIndentedString(behaviour)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

