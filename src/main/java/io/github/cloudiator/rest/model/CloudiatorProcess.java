/*
 * Cloudiator REST Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: daniel.baur@uni-ulm.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.cloudiator.rest.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.cloudiator.rest.model.IpAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * CloudiatorProcess
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-13T10:47:33.672+01:00[Europe/Berlin]")

public class CloudiatorProcess implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ORIGIN_ID = "originId";
  @SerializedName(SERIALIZED_NAME_ORIGIN_ID)
  private String originId;

  public static final String SERIALIZED_NAME_PROCESS_TYPE = "processType";
  @SerializedName(SERIALIZED_NAME_PROCESS_TYPE)
  private String processType;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    PENDING("PENDING"),
    
    RUNNING("RUNNING"),
    
    ERROR("ERROR"),
    
    DELETED("DELETED"),
    
    FINISHED("FINISHED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    LANCE("LANCE"),
    
    SPARK("SPARK"),
    
    FAAS("FAAS"),
    
    SIMULATION("SIMULATION"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_TASK = "task";
  @SerializedName(SERIALIZED_NAME_TASK)
  private String task;

  public static final String SERIALIZED_NAME_TASK_INTERFACE = "taskInterface";
  @SerializedName(SERIALIZED_NAME_TASK_INTERFACE)
  private String taskInterface;

  public static final String SERIALIZED_NAME_DIAGNOSTIC = "diagnostic";
  @SerializedName(SERIALIZED_NAME_DIAGNOSTIC)
  private String diagnostic;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_IP_ADDRESSES = "ipAddresses";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESSES)
  private List<IpAddress> ipAddresses = null;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public CloudiatorProcess() {
    this.processType = this.getClass().getSimpleName();
  }

  public CloudiatorProcess id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CloudiatorProcess originId(String originId) {
    
    this.originId = originId;
    return this;
  }

   /**
   * Get originId
   * @return originId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOriginId() {
    return originId;
  }


  public void setOriginId(String originId) {
    this.originId = originId;
  }


  public CloudiatorProcess processType(String processType) {
    
    this.processType = processType;
    return this;
  }

   /**
   * Get processType
   * @return processType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProcessType() {
    return processType;
  }


  public void setProcessType(String processType) {
    this.processType = processType;
  }


  public CloudiatorProcess state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public CloudiatorProcess type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CloudiatorProcess schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * The id of the schedule this process belongs to.
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the schedule this process belongs to.")

  public String getSchedule() {
    return schedule;
  }


  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public CloudiatorProcess task(String task) {
    
    this.task = task;
    return this;
  }

   /**
   * The id of the task that is instantiated by this process.
   * @return task
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the task that is instantiated by this process.")

  public String getTask() {
    return task;
  }


  public void setTask(String task) {
    this.task = task;
  }


  public CloudiatorProcess taskInterface(String taskInterface) {
    
    this.taskInterface = taskInterface;
    return this;
  }

   /**
   * The task interface used for running the process.
   * @return taskInterface
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The task interface used for running the process.")

  public String getTaskInterface() {
    return taskInterface;
  }


  public void setTaskInterface(String taskInterface) {
    this.taskInterface = taskInterface;
  }


  public CloudiatorProcess diagnostic(String diagnostic) {
    
    this.diagnostic = diagnostic;
    return this;
  }

   /**
   * Diagnostic information about this process
   * @return diagnostic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Diagnostic information about this process")

  public String getDiagnostic() {
    return diagnostic;
  }


  public void setDiagnostic(String diagnostic) {
    this.diagnostic = diagnostic;
  }


  public CloudiatorProcess reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Reason this process was created
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason this process was created")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public CloudiatorProcess owner(String owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * The user this process was created for
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The user this process was created for")

  public String getOwner() {
    return owner;
  }


  public void setOwner(String owner) {
    this.owner = owner;
  }


  public CloudiatorProcess ipAddresses(List<IpAddress> ipAddresses) {
    
    this.ipAddresses = ipAddresses;
    return this;
  }

  public CloudiatorProcess addIpAddressesItem(IpAddress ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<IpAddress>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * The public/private ip addresses under which this process is reachable. 
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The public/private ip addresses under which this process is reachable. ")

  public List<IpAddress> getIpAddresses() {
    return ipAddresses;
  }


  public void setIpAddresses(List<IpAddress> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public CloudiatorProcess endpoint(String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

   /**
   * The endpoint where this process is reachable. 
   * @return endpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The endpoint where this process is reachable. ")

  public String getEndpoint() {
    return endpoint;
  }


  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudiatorProcess cloudiatorProcess = (CloudiatorProcess) o;
    return Objects.equals(this.id, cloudiatorProcess.id) &&
        Objects.equals(this.originId, cloudiatorProcess.originId) &&
        Objects.equals(this.processType, cloudiatorProcess.processType) &&
        Objects.equals(this.state, cloudiatorProcess.state) &&
        Objects.equals(this.type, cloudiatorProcess.type) &&
        Objects.equals(this.schedule, cloudiatorProcess.schedule) &&
        Objects.equals(this.task, cloudiatorProcess.task) &&
        Objects.equals(this.taskInterface, cloudiatorProcess.taskInterface) &&
        Objects.equals(this.diagnostic, cloudiatorProcess.diagnostic) &&
        Objects.equals(this.reason, cloudiatorProcess.reason) &&
        Objects.equals(this.owner, cloudiatorProcess.owner) &&
        Objects.equals(this.ipAddresses, cloudiatorProcess.ipAddresses) &&
        Objects.equals(this.endpoint, cloudiatorProcess.endpoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, originId, processType, state, type, schedule, task, taskInterface, diagnostic, reason, owner, ipAddresses, endpoint);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudiatorProcess {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    originId: ").append(toIndentedString(originId)).append("\n");
    sb.append("    processType: ").append(toIndentedString(processType)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    taskInterface: ").append(toIndentedString(taskInterface)).append("\n");
    sb.append("    diagnostic: ").append(toIndentedString(diagnostic)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

